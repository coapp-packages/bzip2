@import @"version.inc";

configurations {
		
};

nuget {
	// the nuspec file metadata. Gets created/updated on build
	nuspec {
		id = bzip2;
		version : ${package-version};
		title: BZip2 Compression Library;
		authors: {Julian Seward, Tim Rogers};
		owners: {CoApp Project, Garrett Serack};
		licenseUrl: "https://raw.github.com/coapp-packages/bzip2/master/LICENSE";
		projectUrl: "http://github.com/coapp-packages/bzip2";
		iconUrl: "http://www.bzip.org/images/bzip2-logo.png";
		requireLicenseAcceptance:false;
		summary:BZip2 Compression Library;
		description: @"A library for compressing and decompressing data in the bzip2 format.
	BZip homepage:  http://www.bzip.org";
		releaseNotes: "Release of bzip2 1.0.6 libraries.";
		copyright: Copyright 2013;
		tags: { bzip2, libbz2, native, CoApp };

	};

	// the files that go into the content folders
	// (inserted into the nuspec file)
	files {
		include: { ..\bzlib.h };

		docs: { 
            ..\manual.html,
            ..\manual.pdf,
            ..\manual.xml,
        };
    
		("v100,v110", "Win32,x64", "release,debug", "Dynamic", "cdecl,stdcall") => {
			[${0},${1},${2},${3},${4}] {
				lib:     { .\output\${0}\${1}\${2}\${3}\${4}\libbz2.lib };
				bin:     { .\output\${0}\${1}\${2}\${3}\${4}\libbz2.dll };
				symbols: { .\output\${0}\${1}\${2}\${3}\${4}\libbz2.pdb };
			};
		};
		("v100,v110", "Win32,x64", "release,debug", "Static,ltcg", "cdecl,stdcall") => {
			[${0},${1},${2},${3},${4}] {
				lib:     { .\output\${0}\${1}\${2}\${3}\${4}\libbz2.lib };
			};
		};

	};

	// the VC++ .props file that gets generated and inserted into the ${d_content} folder
	props { 
		// we're going to generate a number of properties anyway. 
        // so even if the packager doesn't specify the props object 
        // we're going to make this file.
	};

	// the VC++ .targets file that gets generated and inserted into the ${d_content} folder
	targets {
		// every configuration needs to reference the include directories.
		Defines += HAS_BZ2;
		[dynamic]
			Defines += BZ_IMPORT;
		[stdcall]
			Defines += BZ_WAPI;
			
	};
}

